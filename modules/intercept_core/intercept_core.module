<?php

use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 * Implements hook_preprocess_page.
 */
function intercept_core_preprocess_page(array &$variables) {
  $consumer_id = Drupal::state()->get('intercept_client.id');
  $consumer = Drupal::service('entity_type.manager')->getStorage('consumer')->load($consumer_id);
  if ($consumer) {
    $consumer_token = $consumer ? $consumer->uuid() : NULL;
    $variables['#attached']['drupalSettings']['intercept']['consumer'] = $consumer_token;
  }
}

/**
 * Implements hook_menu_links_discovered_alter().
 */
function intercept_core_menu_links_discovered_alter(&$links) {
  // Add a warning to the end of route links to the admin section.
  if (isset($links['user.page'])) {
    $links['user.page']['title'] = t('Dashboard');
  }
}

/**
 * Implements hook_entity_base_field_info().
 */
function intercept_core_entity_base_field_info(\Drupal\Core\Entity\EntityTypeInterface $entity_type) {
  $fields = [];
  if ($entity_type->id() == 'node') {
    $fields['image_primary'] = \Drupal\Core\Field\BaseFieldDefinition::create('entity_reference')
      ->setLabel(new TranslatableMarkup('Image Primary'))
      ->setDescription(new TranslatableMarkup('Primary image for nodes required by InterCEPT.'))
      ->setSetting('handler', 'default:media')
      ->setTargetBundle('image')
      ->setTargetEntityTypeId('media')
      ->setCardinality(1)
      ->setDisplayOptions('view', [
        'label' => 'inline',
        'type' => 'entity_reference_label',
        'weight' => 5,
      ])
      ->setDisplayOptions('form', [
        'type' => 'options_buttons',
        'weight' => 5,
      ]);
  }
  return $fields;
}

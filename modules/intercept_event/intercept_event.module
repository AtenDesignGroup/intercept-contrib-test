<?php

use Drupal\Core\Access\AccessResult;
use Drupal\Core\TypedData\DataDefinition;

/**
 * Implements hook_entity_field_access().
 */
function intercept_event_entity_field_access($operation, \Drupal\Core\Field\FieldDefinitionInterface $field_definition, \Drupal\Core\Session\AccountInterface $account, \Drupal\Core\Field\FieldItemListInterface $items = NULL) {
  // Check if it's edit because 'view' might not have any items.
  if ($operation == 'edit') {
    if ($items->getEntity()->bundle() == 'event' && $field_definition->getName() == 'field_event_is_template') {
      return AccessResult::forbiddenIf(!$account->hasPermission('edit event field field_event_is_template'));
    }
    if ($items->getEntity()->bundle() == 'event' && $field_definition->getName() == 'field_featured') {
      return AccessResult::forbiddenIf(!$account->hasPermission('edit event field field_featured'));
    }
  }
  return AccessResult::neutral();
}

/**
 * Implements hook_entity_bundle_field_info().
 */
function intercept_event_entity_bundle_field_info(\Drupal\Core\Entity\EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) {
  $fields = [];
  if ($entity_type->id() == 'node' && $bundle == 'event') {
    $fields['registration'] = \Drupal\Core\Field\BaseFieldDefinition::create('intercept_computed')
      ->setLabel(t('Registration details'))
      ->setComputed(TRUE)
      ->setSetting('properties', [
        'total' => DataDefinition::create('integer')->setLabel(t('Total registrations')),
        'total_waitlist' => DataDefinition::create('integer')->setLabel(t('Total waitlisted')),
        'status' => DataDefinition::create('string')->setLabel(t('Status')),
        'status_user' => DataDefinition::create('string')->setLabel(t('Status for current user')),
      ])
      ->setClass(\Drupal\intercept_event\EventRegistrationField::class);

  }
  return $fields;

}
